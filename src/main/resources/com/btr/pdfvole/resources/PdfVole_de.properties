
# Standard application resources
Application.id = pdfvole
Application.title = PDF Vole - Debugger und Analyzer
Application.version = 1.0
Application.vendor = Better Than Reality
Application.vendorId = BTR
Application.homepage = https://pdfvole.dev.java.net
Application.description = Ein einfacher PDF debugger.
Application.lookAndFeel = system

mainFrame.title = PDF Vole - Debugger und Analyzer
mainFrame.iconImage = root.png

mainTab.tab1 = Struktur
mainTab.tab2 = Betrachter

# Menu entries
fileMenu.text = &Datei
lnfMenu.text = &Oberfläche
helpMenu.text = &Hilfe

open.Action.text = Öff&nen ...
open.Action.title = Datei öffnen
open.Action.accelerator = control O

quit.Action.text = B&eenden
quit.Action.shortDescription = Programm beenden

about.Action.text = Ü&ber ...
about.msg = Dieses Programm wurde von Bernd Rosstauscher entwickelt (C) 2009, \n PDF Vole benutzt die folgenden großartigen Opensource Software Komponenten: \n iText PDF Bibliothek, JXLayer, und für die Icons die fantastische\n famfamfam silk icon Sammlung.    

helpMsg.text = <- PDF Datei zum Öffnen in das linke Fenster ziehen
helpMsg.icon = help.png

visitHomepage.Action.text = &Webseite besuchen
visitHomepage.Action.title = Öffnet die PDF Vole homepage: https://pdfvole.dev.java.net

jumpToObject.Action.text = Springe zum Objekt
collapseAll.Action.text = Kinder einklappen
expandAll.Action.text = Kinder ausklappen

# File chooser properties
fileChooser.dialogTitle = PDF Datei öffnen
fileChooserFilter.text = PDF Dateien (*.pdf)

# Password dialog
pwDialog.msg = Passwort eingeben:

#Tree node properties.
tree.node.root.text = PDF Dokument
tree.node.root.source = Quelle
tree.node.root.version = PDF Version
tree.node.root.pages = Anzahl Seiten
tree.node.root.icon = root.png
tree.node.dict.text = %s %s
tree.node.dict.icon = dict.png
tree.node.array.text = %s [%d]
tree.node.array.icon = array.png
tree.node.arrayItem.text = Element %s
tree.node.string.icon = string.png
tree.node.unknown.text = %s <Unbekannt %s>
tree.node.unknown.icon = unknown.png
tree.node.ref.text = Objekt {%s}
tree.node.ref.icon = ref.png
tree.node.number.icon = number.png
tree.node.name.icon = name.png
tree.node.trailer.text = Trailer
tree.node.refTable.text = Objekt Referenz Tabelle [%d]
tree.node.refTable.icon = dict.png
tree.node.refObject.text = %d. Globales Objekt
tree.node.content.icon = content.png
tree.node.bool.icon = bool.png

stream.viewer.mode = Stream Anzeige:
stream.viewer.mode1 = Keine
stream.viewer.mode2 = Raw Daten
stream.viewer.mode3 = Decodierte Daten
stream.viewer.mode4 = PDF Graphik Befehle
stream.viewer.mode5 = Bild-Betrachter
stream.viewer.mode6 = Text-Betrachter

stream.pdf.tbl.header1 = Befehl
stream.pdf.tbl.header2 = Beschreibung
stream.pdf.cmd.unknown = Unbekannter Befehl.

stream.text.charset = Zeichensatz:

stream.hex.export.confirm.title = Überschreiben bestätigen
stream.hex.export.confirm.msg = Die Datei: %s existiert bereits.\nSoll sie überschrieben werden?

stream.img.filter = %s Bilder (*.%s)
stream.img.filter.error = Für diese Dateiendung wurde kein Export-Plugin gefunden.

zoomIn.Action.text = 
zoomIn.Action.title = Vergrössern
zoomIn.Action.shortDescription = Um 10% vergrössern
zoomIn.Action.icon = zoom_in.png
zoomIn.Action.accelerator = control +

zoomOut.Action.text = 
zoomOut.Action.title = Verkleinern
zoomOut.Action.shortDescription = Um 10% verkleinern
zoomOut.Action.icon = zoom_out.png
zoomOut.Action.accelerator = control -

export.Action.text = 
export.Action.title = Stream exportieren
export.Action.shortDescription = Speichert die Daten des Streams als Datei
export.Action.icon = disk.png
export.Action.accelerator = control E
